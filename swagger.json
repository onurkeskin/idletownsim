{"consumes":["application/json"],"produces":["application/json"],"schemes":["http","https"],"swagger":"2.0","info":{"title":"my API.","termsOfService":"there are no TOS at this moment, use at your own risk we take no responsibility","contact":{"name":"Onur Keskin","email":"onurkeskin@ku.edu.tr"},"license":{"name":"MIT","url":"http://opensource.org/licenses/MIT"},"version":"0.0.1"},"host":"146.148.9.139:8080","basePath":"/api","paths":{"/sessions":{"get":{"description":"Gets the user session","tags":["sessions"],"operationId":"handleGetSession_v0","responses":{"200":{"$ref":"#/responses/getSessionResponse_v0"},"default":{"$ref":"#/responses/errorResponse_v0"}}},"post":{"description":"Creates a session for user","tags":["sessions"],"operationId":"handleCreateSession_v0","parameters":[{"type":"string","x-go-name":"Username","name":"username","in":"query"},{"type":"string","x-go-name":"Password","name":"password","in":"query"}],"responses":{"200":{"$ref":"#/responses/createSessionResponse_v0"},"default":{"$ref":"#/responses/errorResponse_v0"}}}},"/users":{"get":{"tags":["users"],"summary":"Gets the user list.","operationId":"handleListUsers_v0","responses":{"200":{"$ref":"#/responses/listUsersResponse_v0"},"default":{"$ref":"#/responses/errorResponse_v0"}}},"post":{"tags":["users"],"summary":"Gets the user list.","operationId":"handleCreateUser_v0","parameters":[{"x-go-name":"User","name":"user","in":"body","schema":{"$ref":"#/definitions/NewUser"}}],"responses":{"200":{"$ref":"#/responses/createUserResponse_v0"},"default":{"$ref":"#/responses/errorResponse_v0"}}}}},"definitions":{"IUser":{"type":"object","properties":{"GetID":{"type":"string"},"IsValid":{"type":"boolean"}},"x-go-package":"github.com/app/server/domain"},"NewUser":{"type":"object","properties":{"email":{"type":"string","x-go-name":"Email"},"password":{"type":"string","x-go-name":"Password"},"username":{"type":"string","x-go-name":"Username"}},"x-go-package":"github.com/app/users"},"ObjectId":{"description":"http://www.mongodb.org/display/DOCS/Object+IDs","type":"string","title":"ObjectId is a unique ID identifying a BSON value. It must be exactly 12 bytes\nlong. MongoDB objects by default have such a property set in their \"_id\"\nproperty.","x-go-package":"gopkg.in/mgo.v2/bson"},"Role":{"type":"string","x-go-package":"github.com/app/users"},"Roles":{"type":"array","items":{"$ref":"#/definitions/Role"},"x-go-package":"github.com/app/users"},"Time":{"description":"Programs using times should typically store and pass them as values,\nnot pointers.  That is, time variables and struct fields should be of\ntype time.Time, not *time.Time.  A Time value can be used by\nmultiple goroutines simultaneously.\n\nTime instants can be compared using the Before, After, and Equal methods.\nThe Sub method subtracts two instants, producing a Duration.\nThe Add method adds a Time and a Duration, producing a Time.\n\nThe zero value of type Time is January 1, year 1, 00:00:00.000000000 UTC.\nAs this time is unlikely to come up in practice, the IsZero method gives\na simple way of detecting a time that has not been initialized explicitly.\n\nEach Time has associated with it a Location, consulted when computing the\npresentation form of the time, such as in the Format, Hour, and Year methods.\nThe methods Local, UTC, and In return a Time with a specific location.\nChanging the location in this way changes only the presentation; it does not\nchange the instant in time being denoted and therefore does not affect the\ncomputations described in earlier paragraphs.\n\nNote that the Go == operator compares not just the time instant but also the\nLocation. Therefore, Time values should not be used as map or database keys\nwithout first guaranteeing that the identical Location has been set for all\nvalues, which can be achieved through use of the UTC or Local method.","type":"object","title":"A Time represents an instant in time with nanosecond precision.","x-go-package":"time"},"Users":{"description":"Users struct","type":"array","items":{"$ref":"#/definitions/user"},"x-go-package":"github.com/app/users"},"user":{"description":"A User model","type":"object","required":["id","username","status"],"properties":{"createdDate":{"x-go-name":"CreatedDate","$ref":"#/definitions/Time"},"email":{"description":"The email of the user.","type":"string","x-go-name":"Email"},"id":{"description":"The id of the user.","x-go-name":"ID","$ref":"#/definitions/ObjectId"},"lastModifiedDate":{"x-go-name":"LastModifiedDate","$ref":"#/definitions/Time"},"roles":{"x-go-name":"Roles","$ref":"#/definitions/Roles"},"status":{"description":"The status of the user.","type":"string","x-go-name":"Status"},"username":{"description":"The username of the user.","type":"string","x-go-name":"Username"}},"x-go-name":"User","x-go-package":"github.com/app/users"}},"responses":{"confirmUserResponse_v0":{"description":"A ConfirmUserResponse parameter model.\n\nUsed as a response for confirming users.","schema":{"$ref":"#/definitions/user"},"headers":{"message":{"type":"string"},"success":{"type":"boolean"},"user":{}}},"countUsersResponse_v0":{"description":"A CountUsersResponse parameter model.\n\nUsed as a response for counting users.","headers":{"message":{"type":"string"},"success":{"type":"boolean"}}},"createSessionResponse_v0":{"description":"A CreateSessionResponse parameter model.\n\nUsed as a response for create session request.","headers":{"message":{"type":"string"},"success":{"type":"boolean"},"token":{"type":"string"}}},"createUserResponse_v0":{"description":"A CreateUserResponse parameter model.\n\nUsed as a response for creating users.","schema":{"$ref":"#/definitions/user"},"headers":{"message":{"type":"string"},"success":{"type":"boolean"}}},"deleteAllUsersResponse_v0":{"description":"A DeleteAllUsersResponse parameter model.\n\nUsed as a response for deleting all users.","headers":{"success":{"type":"boolean"}}},"deleteSessionResponse_v0":{"description":"A DeleteSessionResponse parameter model.\n\nUsed as a response for deleting user sessions.","headers":{"message":{"type":"string"},"success":{"type":"boolean"}}},"deleteUserResponse_v0":{"description":"A DeleteUserResponse parameter model.\n\nUsed as a response for deleting user.","headers":{"success":{"type":"boolean"}}},"errorResponse_v0":{"description":"A ErrorResponse parameter model.\n\nUsed as a response for errors.","headers":{"success":{"type":"boolean"}}},"getSessionResponse_v0":{"description":"A GetSessionResponse parameter model.\n\nUsed as a response for getting user session.","schema":{"$ref":"#/definitions/IUser"},"headers":{"message":{"type":"string"},"success":{"type":"boolean"},"user":{}}},"getUserResponse_v0":{"description":"A GetUserResponse parameter model.\n\nUsed as a response for getting user.","schema":{"$ref":"#/definitions/user"},"headers":{"message":{"type":"string"},"success":{"type":"boolean"}}},"listUsersResponse_v0":{"description":"A ListUsersResponse parameter model.\n\nUsed as a response for seeing users.","schema":{"$ref":"#/definitions/Users"},"headers":{"last_id":{"type":"string"},"message":{"type":"string"},"success":{"type":"boolean"}}},"updateUserResponse_v0":{"description":"A UpdateUserResponse parameter model.\n\nUsed as a response for getting user.","schema":{"$ref":"#/definitions/user"},"headers":{"message":{"type":"string"},"success":{"type":"boolean"}}},"updateUsersResponse_v0":{"description":"A UpdateUsersResponse parameter model.\n\nUsed as a response for updating users.","headers":{"ids":{"type":"array","items":{"type":"string"}},"message":{"type":"string"},"success":{"type":"boolean"}}}}}